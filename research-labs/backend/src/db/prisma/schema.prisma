generator client {
  provider = "prisma-client-js"
  output   = "../db/prisma"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://root:root@localhost:5432/dev-db"
}

model publication_files {
  id             String       @id @db.Uuid
  file_type      String       @db.VarChar(50)
  file_path      String       @db.VarChar(50)
  publication_id Int          @default(autoincrement())
  publications   publications @relation(fields: [publication_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pub")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model publications {
  id                Int                 @id @default(autoincrement())
  title             String              @db.VarChar(500)
  journal           String
  status            String              @default("DRAFT") @db.VarChar(50)
  submitter_id      Int                 @default(autoincrement())
  submitted_at      DateTime            @default(now()) @db.Timestamptz(6)
  publication_files publication_files[]
  users             users               @relation(fields: [submitter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  id            Int            @id @default(autoincrement())
  username      String         @unique @db.VarChar(255)
  email         String         @unique @db.VarChar(255)
  password_hash String
  role          String         @db.VarChar(50)
  created_at    DateTime?      @default(now()) @db.Timestamp(6)
  updated_at    DateTime?      @default(now()) @db.Timestamp(6)
  publications  publications[]
}
